// Задание 1
// Представьте, что у вас есть класс для управления библиотекой. В этом классе будет приватное свойство для хранения списка книг, а также методы для добавления книги, удаления книги и получения информации о наличии книги.

// Класс должен содержать приватное свойство #books, которое инициализируется пустым массивом и представляет собой список книг в библиотеке.

// Реализуйте геттер allBooks, который возвращает текущий список книг.

// Реализуйте метод addBook(title), который позволяет добавлять книгу в список. Если книга с таким названием уже существует в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод removeBook(title), который позволит удалять книгу из списка по названию. Если книги с таким названием нет в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке и возвращать true или false в зависимости от того, есть ли такая книга в списке или нет.

// Реализуйте конструктор, который принимает начальный список книг (массив) в качестве аргумента. Убедитесь, что предоставленный массив не содержит дубликатов; в противном случае выбрасывайте ошибку.

class Library {
  #books = [];

  get allBooks() {
    return this.#books;
  }

  addBook(title) {
    if (this.#books.includes(title)) {
      throw new Error("Такая книга уже есть");
    } else {
      this.#books.push(title);
    }
  }
  removeBook(title) {
    let del = this.#books.indexOf(title);
    if (del < 0) {
      throw new Error("Такой книги нет");
    } else {
      return this.#books.splice(del, 1);
    }
  }

  hasBook(title){
    console.log(this.#books.includes(title));
  }



  constructor(arr) {
    this.#books.push(arr);
  }
}

let elem = new Library("война");
console.log(elem.allBooks);

elem.addBook("миф");
console.log(elem.allBooks);
elem.addBook("война и мир");
console.log(elem.allBooks);
elem.hasBook("миф")
// elem.removeBook("миg");
// elem.removeBook("миф");
